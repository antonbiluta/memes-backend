name: Build and Deploy to Master

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and push Docker image
        env:
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo $CR_PAT | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}-${{ github.run_number }} .
          docker tag ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}-${{ github.run_number }} ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}-latest
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}-${{ github.run_number }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}-latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: |
            helm upgrade -i memes-service-${{ github.ref_name }} helm \
              --set image.tag=${{ github.ref_name }}-${{ github.run_number }} \
              --set image.repository=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }} \
              -f helm/values.${{ github.ref_name }}.yaml \
              -n ${{ vars.KUBE_NS }} \
              --wait
          kubeconfig: '${{ secrets.KUBECONFIG }}'
          overrule_existing_kubeconfig: "true"